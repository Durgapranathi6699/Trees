class Solution {
    public long kthLargestLevelSum(TreeNode root, int k) {
       PriorityQueue<Long> p = new PriorityQueue<>();
        
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
     
        while (!q.isEmpty()) {
          
            int n = q.size();
            long sum = 0;
            for (int i = 0; i < n; i++) {
                TreeNode t = q.poll();
                sum += t.val;
                if (t.left != null) q.add(t.left);
                if (t.right != null) q.add(t.right);
            }
            p.add(sum);
            if (p.size() > k) p.poll();
        }
        
        
        if (p.size() < k) return -1;
        
        return p.peek();
    }
}
    
