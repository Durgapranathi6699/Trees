class Solution {
     boolean isHeap(Node tree) {
        int i=0;
        int nodecount=count(tree);
        if(isCBT(tree,nodecount,i) && ismaxorder(tree)){
            return true;
        }
        return false;
    }
    int count(Node tree){
        if(tree==null)return 0;
        return 1+count(tree.left)+count(tree.right);
    }
    boolean isCBT(Node tree,int count,int i){
        if(tree==null)return true;
        if(i>=count)return false;
        else{
            boolean left=isCBT(tree.left,count,2*i+1);
             boolean right=isCBT(tree.right,count,2*i+2);
             return left&& right;
        }
    }
   boolean ismaxorder(Node tree){
        if(tree.left==null && tree.right==null)return true;
        if(tree.left==null){
            return tree.right.data<tree.data;
        }
        if(tree.right==null){
            return tree.left.data<tree.data;
        }else{
            return  tree.right.data<tree.data && tree.left.data<tree.data &&
            ismaxorder(tree.left) && ismaxorder(tree.right)  ;
        }
    }
}
